{"version":3,"file":"NodeLoader.cjs.js","sources":["../src/NodeLoader.js"],"sourcesContent":["//function node\nimport functionNode from '@node-red/nodes/core/function/10-function'\nimport switchNode from '@node-red/nodes/core/function/10-switch'\nimport changeNode from '@node-red/nodes/core/function/15-change'\nimport rangeNode from '@node-red/nodes/core/function/16-range'\nimport templateNode from '@node-red/nodes/core/function/80-template'\nimport delayNode from '@node-red/nodes/core/function/89-delay'\nimport triggerNode from '@node-red/nodes/core/function/89-trigger'\nimport execNode from '@node-red/nodes/core/function/90-exec'\nimport rbeNode from '@node-red/nodes/core/function/rbe'\n\n//common node\nimport injectNode from '@node-red/nodes/core/common/20-inject'\nimport debugNode from '@node-red/nodes/core/common/21-debug'\nimport completeNode from '@node-red/nodes/core/common/24-complete'\nimport catchNode from '@node-red/nodes/core/common/25-catch'\nimport statusNode from '@node-red/nodes/core/common/25-status'\nimport linkNode from '@node-red/nodes/core/common/60-link'\nimport commentNode from '@node-red/nodes/core/common/90-comment'\nimport unknownNode from '@node-red/nodes/core/common/98-unknown'\n\n//network node\nimport tlsNode from '@node-red/nodes/core/network/05-tls'\nimport httpproxyNode from '@node-red/nodes/core/network/06-httpproxy'\nimport mqttNode from '@node-red/nodes/core/network/10-mqtt'\nimport httpinNode from '@node-red/nodes/core/network/21-httpin'\nimport httprequestNode from '@node-red/nodes/core/network/21-httprequest'\nimport websocketNode from '@node-red/nodes/core/network/22-websocket'\nimport tcpinNode from '@node-red/nodes/core/network/31-tcpin'\nimport udpNode from '@node-red/nodes/core/network/32-udp'\n\n//parser node\nimport csvNode from '@node-red/nodes/core/parsers/70-CSV'\nimport htmlNode from '@node-red/nodes/core/parsers/70-HTML'\nimport jsonNode from '@node-red/nodes/core/parsers/70-JSON'\nimport xmlNode from '@node-red/nodes/core/parsers/70-XML'\nimport yamlNode from '@node-red/nodes/core/parsers/70-YAML'\n\n//sequence node\nimport splitNode from '@node-red/nodes/core/sequence/17-split'\nimport sortNode from '@node-red/nodes/core/sequence/18-sort'\nimport batchNode from '@node-red/nodes/core/sequence/19-batch'\n\n//storage node\nimport fileNode from '@node-red/nodes/core/storage/10-file'\nimport watchNode from '@node-red/nodes/core/storage/23-watch'\n\nimport _ from 'lodash'\n\n\n\n\nexport class NodeLoader{\n    nodeDict = {}\n    constructor(){\n        this.nodeDict = {\n            function: functionNode,\n            switch: switchNode,\n            change: changeNode,\n            range: rangeNode,\n            template: templateNode,\n            delay: delayNode,\n            trigger: triggerNode,\n            exec: execNode,\n            rbe: rbeNode,\n            inject: injectNode,\n            debug: debugNode,\n            complete: completeNode,\n            catch: catchNode,\n            status: statusNode,\n            \"link in\": linkNode,\n            \"link out\": linkNode,\n            \"link call\": linkNode,\n            comment: commentNode,\n            unknown: unknownNode,\n            \"tls-config\": tlsNode,\n            \"http proxy\": httpproxyNode,\n            \"mqtt-broker\": mqttNode,\n            \"mqtt in\": mqttNode,\n            \"mqtt out\": mqttNode,\n            \"http request\": httprequestNode,\n            \"http response\": httpinNode,\n            \"http in\": httpinNode,\n            \"websocket-listener\": websocketNode,\n            \"websocket-client\": websocketNode,\n            \"websocket out\": websocketNode,\n            \"websocket in\": websocketNode,\n            \"tcp in\": tcpinNode,\n            \"tcp out\": tcpinNode,\n            \"tcp request\": tcpinNode,\n            \"udp in\": udpNode,\n            \"udp out\": udpNode,\n            csv: csvNode,\n            html: htmlNode,\n            json: jsonNode,\n            xml: xmlNode,\n            yaml: yamlNode,\n            split: splitNode,\n            join: splitNode,\n            sort: sortNode,\n            batch: batchNode,\n            file: fileNode,\n            \"file in\": fileNode,\n            watch: watchNode,\n        };\n    }\n    \n    // getNodeArray(fileString)\n    // {\n    //     const flowData = JSON.parse(fileString);\n    //     const condFunc = _.cond([\n    //         [\n    //             (a) => _.gt(a.length, 0),\n    //             (a) => console.info(`[Node Loader] Missing custom node: ${a}`),\n    //         ],\n    //     ]);\n\n    //     const checkInDict = (node) => (node in this.nodeDict);\n    //     const nodeArray = _.chain(flowData)\n    //         .map((node) => node.type)\n    //         .uniq()\n    //         .filter(checkInDict)\n    //         .uniq()\n    //         .value()\n    //         .map((node) => (this.nodeDict[node]));\n\n    //     // console.log(nodeArray)\n\n    //     const missingNode = _.chain(flowData)\n    //         .map((node) => node.type)\n    //         .uniq()\n    //         .filter(_.negate(checkInDict))\n    //         .uniq()\n    //         .value();\n\n    //     condFunc(missingNode);\n    //     return _.uniq(nodeArray);\n    // }\n    \n    getNodeArray(fileString)\n    {\n        const flowData = JSON.parse(fileString);\n\n    // if (missingNode.length > 0) {\n    //     console.info(`[Node Loader] Missing custom node: ${missingNode}`)\n    // }\n\n    const originalNodeTypeArray = flowData.map((node) => (node.type))\n    const uniqleNodeTypeArray = [...new Set(originalNodeTypeArray)]\n    // console.log('uni node',uniqleNodeArray)\n    let nodeArray = []\n    uniqleNodeTypeArray.forEach((node) => {\n        if (nodeDict.hasOwnProperty(node)) {\n            nodeArray.push(nodeDict[node])\n            // console.log('node type: ',node,nodeDict[node])\n        }\n        else {\n            console.info(`[Node Loader WARNING] ${node} cannot find!!`)\n        }\n    }\n    )\n    // console.log(originalNodeTypeArray,uniqleNodeTypeArray)\n    // const uniqleNodeArray = [...new Set(nodeArray)]\n    // return uniqleNodeArray\n    // console.log(nodeArray,uniqleNodeArray)\n\n    return [...new Set(nodeArray)]\n    }\n};\n\n// module.exports = NodeLoader"],"names":["NodeLoader","nodeDict","constructor","function","functionNode","switch","switchNode","change","changeNode","range","rangeNode","template","templateNode","delay","delayNode","trigger","triggerNode","exec","execNode","rbe","rbeNode","inject","injectNode","debug","debugNode","complete","completeNode","catch","catchNode","status","statusNode","linkNode","comment","commentNode","unknown","unknownNode","tlsNode","httpproxyNode","mqttNode","httprequestNode","httpinNode","websocketNode","tcpinNode","udpNode","csv","csvNode","html","htmlNode","json","jsonNode","xml","xmlNode","yaml","yamlNode","split","splitNode","join","sort","sortNode","batch","batchNode","file","fileNode","watch","watchNode","getNodeArray","fileString","flowData","JSON","parse","originalNodeTypeArray","map","node","type","uniqleNodeTypeArray","Set","nodeArray","forEach","hasOwnProperty","push","console","info"],"mappings":"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"}